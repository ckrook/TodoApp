class todo{constructor(t,e,o,n,r){this.id=t,this.text=e,this.priority=o,this.created=n,this.deadline=r,this.done=!1}}const prioScale=["Low","Medium","High"];let sortBy=document.getElementById("sortview"),submit=document.getElementById("submit"),taskWrapper=document.getElementById("tasks"),tasksDone=document.getElementById("tasksdone"),task=document.getElementsByClassName("task"),input=document.getElementById("todo-text"),todoArray1=[];function fromLocalstorage(){let t=localStorage.getItem("todo");if(t=JSON.parse(t),t){printTodos(t)}}function pressEnter(t){if(t.preventDefault(),"Enter"===t.key&&input.value)return submitTodo(t)}function submitTodo(t){t.preventDefault();let e=document.getElementById("todo-text").value;if(!e)return;let o=document.getElementById("deadline").value,n=new Date,r=n.getFullYear()+"-"+(n.getMonth()+1)+"-"+n.getDate()+" "+n.getHours()+":"+n.getMinutes()+":"+n.getSeconds(),a=document.getElementById("priority").options[document.getElementById("priority").selectedIndex].value,d=todoArray1.length,i=new todo(d,e,a,r,o);todoArray1.push(i),document.getElementById("todo-text").value="",printTodos(todoArray1)}function changeSortBy(){return"newest"==this.value?(todoArray1.sort((function(t,e){return new Date(t.created)-new Date(e.created)})),toLocalstorage(todoArray1),void printTodos(todoArray1)):"deadline"==this.value?(todoArray1.sort((function(t,e){return new Date(t.deadline)-new Date(e.deadline)})),toLocalstorage(todoArray1),void printTodos(todoArray1)):"alphabetical"==this.value?(todoArray1.sort((function(t,e){return t.text.toLowerCase()<e.text.toLowerCase()?-1:t.text.toLowerCase()>e.text.toLowerCase()?1:0})),toLocalstorage(todoArray1),void printTodos(todoArray1)):"priority"==this.value?(todoArray1.sort((function(t,e){return e.priority-t.priority})),toLocalstorage(todoArray1),void printTodos(todoArray1)):null}function setStatusDone(t){let e=t.target.id.split("-").pop().trim();e=parseInt(e),todoArray1[e].done=!0,toLocalstorage(todoArray1),printTodos(todoArray1)}function printTodos(t){taskWrapper.innerHTML="",tasksDone.innerHTML="";let e="",o="";t.filter((t=>!0===t.done)).length>0&&(tasksDone.innerHTML="<span>Completed</span>");for(let n=0;n<t.length;n++){let r="",a="";!0===t[n].done&&(r="statusdone",a="crossed",o=`\n      <div class="task mb-2 ${r}">\n        <div class="row">\n          <div class="col-2 d-flex justify-content-center align-items-center">\n            <input id="checkbox-${n}" type="checkbox" class="checkmark" checked/>\n          </div>\n          <div class="col-7 text-white">\n            <p class="${a} ">${t[n].text}</p>\n            <time>${t[n].deadline}</time>\n          </div>\n          <div class="col-3 d-flex align-items-end">\n            <a id="delete-${n}" class="priority delete bg-red-500">Remove</a>\n          </div>\n         </div>\n      </div>\n      `,tasksDone.innerHTML+=o),!1===t[n].done&&(e=`\n    <div class="task mb-2 ${r}">\n\t    <div class="row">\n        <div class="col-2 d-flex justify-content-center align-items-center">\n          <input id="checkbox-${n}" type="checkbox" class="checkmark" />\n        </div>\n\t\t    <div class="col-7">\n\t\t    \t<p class="${a}">${t[n].text}</p>\n\t\t\t    <time>${t[n].deadline}</time>\n\t\t    </div>\n        <div class="col-3 d-flex align-items-end">\n          <span class="priority ${prioScale[parseInt(t[n].priority)-1].toLowerCase()}">${prioScale[parseInt(t[n].priority)-1]}</span>\n        </div>\n\n \t    </div>\n    </div>\n    `,taskWrapper.innerHTML+=e),toLocalstorage(t)}document.querySelectorAll(".checkmark").forEach((e=>{e.addEventListener("click",(e=>{let o=e.target.id.split("-").pop().trim();1==t[o].done?(t[o].done=!1,toLocalstorage(t),printTodos(t)):(toLocalstorage(t),setStatusDone(e))}))})),document.querySelectorAll(".delete").forEach((t=>{t.addEventListener("click",(t=>{deleteItem(t.target.id.split("-").pop().trim())}))}))}function deleteItem(t){todoArray1.splice(t,1),toLocalstorage(todoArray1),printTodos(todoArray1)}function toLocalstorage(t){localStorage.setItem("todo",JSON.stringify(t))}window.onload=function(){fromLocalstorage(),submit.addEventListener("click",submitTodo),sortBy.addEventListener("change",changeSortBy)};
//# sourceMappingURL=index.c2fafb0c.js.map
