{"mappings":"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","sources":["src/main.ts"],"sourcesContent":["class todo {\n  id: number;\n  text: string;\n  priority: string;\n  created: string;\n  deadline: string;\n  done: boolean;\n  constructor(id, text, priority, currentDate, deadline) {\n    this.id = id;\n    this.text = text;\n    this.priority = priority;\n    this.created = currentDate;\n    this.deadline = deadline;\n    this.done = false;\n  }\n}\n\nconst prioScale = [\"Low\", \"Medium\", \"High\"];\nlet sortBy = document.getElementById(\"sortview\");\nlet submit = document.getElementById(\"submit\");\nlet taskWrapper = document.getElementById(\"tasks\");\nlet tasksDone = document.getElementById(\"tasksdone\");\nlet task = document.getElementsByClassName(\"task\");\nlet input = document.getElementById(\"todo-text\") as HTMLInputElement;\nlet todoArray = [];\n\nwindow.onload = function () {\n  fromLocalstorage();\n  submit.addEventListener(\"click\", submitTodo);\n  // input.addEventListener(\"keyup\", pressEnter);\n  sortBy.addEventListener(\"change\", changeSortBy);\n};\n\nfunction fromLocalstorage() {\n  let storedTodo = localStorage.getItem(\"todo\");\n  storedTodo = JSON.parse(storedTodo);\n  if (storedTodo) {\n    let todoArray = storedTodo;\n    printTodos(todoArray);\n  }\n}\nfunction pressEnter(event) {\n  event.preventDefault();\n  if (event.key === \"Enter\") {\n    if (input.value) {\n      return submitTodo(event);\n    }\n  }\n}\n\nfunction submitTodo(event) {\n  event.preventDefault();\n  let text = (document.getElementById(\"todo-text\") as HTMLInputElement).value;\n  if (!text) return;\n  let deadLine = (document.getElementById(\"deadline\") as HTMLInputElement)\n    .value;\n  let today = new Date();\n  let currentDate =\n    today.getFullYear() +\n    \"-\" +\n    (today.getMonth() + 1) +\n    \"-\" +\n    today.getDate() +\n    \" \" +\n    today.getHours() +\n    \":\" +\n    today.getMinutes() +\n    \":\" +\n    today.getSeconds();\n  let priority = (document.getElementById(\"priority\") as HTMLSelectElement)\n    .options[\n    (document.getElementById(\"priority\") as HTMLSelectElement).selectedIndex\n  ].value;\n  let id = todoArray.length;\n  let temp = new todo(id, text, priority, currentDate, deadLine);\n\n  todoArray.push(temp);\n  (document.getElementById(\"todo-text\") as HTMLInputElement).value = \"\";\n  printTodos(todoArray);\n}\n\nfunction changeSortBy() {\n  return this.value == \"newest\"\n    ? sortByNewest()\n    : this.value == \"deadline\"\n    ? sortByDeadline()\n    : this.value == \"alphabetical\"\n    ? sortByAlphabetical()\n    : this.value == \"priority\"\n    ? sortByPriority()\n    : null;\n\n  function sortByNewest() {\n    todoArray.sort(function (a, b) {\n      return (new Date(a.created) as any) - (new Date(b.created) as any);\n    });\n    toLocalstorage(todoArray);\n    printTodos(todoArray);\n  }\n  function sortByDeadline() {\n    todoArray.sort(function (a, b) {\n      return (new Date(a.deadline) as any) - (new Date(b.deadline) as any);\n    });\n    toLocalstorage(todoArray);\n    printTodos(todoArray);\n  }\n  function sortByPriority() {\n    todoArray.sort(function (a, b) {\n      return b.priority - a.priority;\n    });\n    toLocalstorage(todoArray);\n    printTodos(todoArray);\n  }\n  function sortByAlphabetical() {\n    todoArray.sort(function (a, b) {\n      if (a.text.toLowerCase() < b.text.toLowerCase()) return -1;\n      if (a.text.toLowerCase() > b.text.toLowerCase()) return 1;\n      return 0;\n    });\n    toLocalstorage(todoArray);\n    printTodos(todoArray);\n  }\n}\n\nfunction setStatusDone(event) {\n  let tempId = event.target.id.split(\"-\").pop().trim();\n  tempId = parseInt(tempId);\n  todoArray[tempId].done = true;\n  toLocalstorage(todoArray);\n  printTodos(todoArray);\n}\n\nfunction printTodos(todoArray) {\n  taskWrapper.innerHTML = \"\";\n  tasksDone.innerHTML = \"\";\n  let tempTodo = ``;\n  let tempTodo2 = ``;\n  if (todoArray.filter((e) => e.done === true).length > 0) {\n    tasksDone.innerHTML = \"<span>Completed</span>\";\n  }\n  for (let i = 0; i < todoArray.length; i++) {\n    let statusdone = \"\";\n    let crossed = \"\";\n    if (todoArray[i].done === true) {\n      statusdone = \"statusdone\";\n      crossed = \"crossed\";\n      tempTodo2 = `\n      <div class=\"task mb-2 ${statusdone}\">\n        <div class=\"row\">\n          <div class=\"col-2 d-flex justify-content-center align-items-center\">\n            <input id=\"checkbox-${i}\" type=\"checkbox\" class=\"checkmark\" checked/>\n          </div>\n          <div class=\"col-7 text-white\">\n            <p class=\"${crossed} \">${todoArray[i].text}</p>\n            <time>${todoArray[i].deadline}</time>\n          </div>\n          <div class=\"col-3 d-flex align-items-end\">\n            <a id=\"delete-${i}\" class=\"priority delete bg-red-500\">Remove</a>\n          </div>\n         </div>\n      </div>\n      `;\n      tasksDone.innerHTML += tempTodo2;\n    }\n    if (todoArray[i].done === false) {\n      tempTodo = `\n    <div class=\"task mb-2 ${statusdone}\">\n\t    <div class=\"row\">\n        <div class=\"col-2 d-flex justify-content-center align-items-center\">\n          <input id=\"checkbox-${i}\" type=\"checkbox\" class=\"checkmark\" />\n        </div>\n\t\t    <div class=\"col-7\">\n\t\t    \t<p class=\"${crossed}\">${todoArray[i].text}</p>\n\t\t\t    <time>${todoArray[i].deadline}</time>\n\t\t    </div>\n        <div class=\"col-3 d-flex align-items-end\">\n          <span class=\"priority ${prioScale[\n            parseInt(todoArray[i].priority) - 1\n          ].toLowerCase()}\">${\n        prioScale[parseInt(todoArray[i].priority) - 1]\n      }</span>\n        </div>\n\n \t    </div>\n    </div>\n    `;\n      taskWrapper.innerHTML += tempTodo;\n    }\n\n    toLocalstorage(todoArray);\n  }\n  document.querySelectorAll(\".checkmark\").forEach((item) => {\n    item.addEventListener(\"click\", (event) => {\n      let tempId = (event.target as any).id.split(\"-\").pop().trim();\n      if (todoArray[tempId].done == true) {\n        todoArray[tempId].done = false;\n        toLocalstorage(todoArray);\n        printTodos(todoArray);\n      } else {\n        toLocalstorage(todoArray);\n        setStatusDone(event);\n      }\n    });\n  });\n  document.querySelectorAll(\".delete\").forEach((thing) => {\n    thing.addEventListener(\"click\", (event) => {\n      let tempId = (event.target as any).id.split(\"-\").pop().trim();\n      deleteItem(tempId);\n    });\n  });\n}\n\nfunction deleteItem(tempId) {\n  todoArray.splice(tempId, 1);\n  toLocalstorage(todoArray);\n  printTodos(todoArray);\n}\n\nfunction toLocalstorage(todoArray) {\n  localStorage.setItem(\"todo\", JSON.stringify(todoArray));\n}\n"],"names":["todo","id1","text1","priority1","currentDate1","deadline","this","id","text","priority","created","done","prioScale","sortBy","document","getElementById","submit","taskWrapper","tasksDone","task","getElementsByClassName","input","todoArray1","fromLocalstorage","storedTodo","localStorage","getItem","JSON","parse","printTodos","pressEnter","event","preventDefault","key","value","submitTodo","deadLine","today","Date","currentDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","options","selectedIndex","length","temp","push","changeSortBy","sort","a","b","toLocalstorage","toLowerCase","setStatusDone","tempId","target","split","pop","trim","parseInt","todoArray","innerHTML","tempTodo","tempTodo2","filter","e","i","statusdone","crossed","window","onload","addEventListener"],"version":3,"file":"index.c2fafb0c.js.map"}